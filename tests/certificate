#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import division, print_function, absolute_import
import os
import subprocess
import re
import sys

certificate = \
'''
\033[1mAll tests passed! If you are submitting a pull request, copy and paste
this certificate into the ``Description`` box:\033[0m

![Commit](https://img.shields.io/badge/commit-%s-lightgrey.svg)
![Branch](https://img.shields.io/badge/branch-%s-lightgrey.svg)
![Build](https://img.shields.io/badge/build-passing-brightgreen.svg)
'''

certificate_bad = \
'''
\033[1mOne ore more tests failed. If you still want to submit a pull request, copy and paste
this certificate into the ``Description`` box:\033[0m

![Commit](https://img.shields.io/badge/commit-%s-lightgrey.svg)
![Branch](https://img.shields.io/badge/branch-%s-lightgrey.svg)
![Build](https://img.shields.io/badge/build-failing-red.svg)
'''

if __name__ == '__main__':

    # Generate certificate
    try:
        branches = subprocess.check_output(['git',
                   'branch']).decode('utf-8').replace('\n', '')
        git_branch = re.findall('\*\s([a-zA-Z0-9_]*)', branches)[0]
        git_hash = subprocess.check_output(['git', 'rev-parse',
                   '--verify', '--short', 'HEAD']).decode('utf-8').replace('\n', '')
    except:
        git_branch = '???'
        git_hash = '???'

    # Tally
    if len(sys.argv) == 2:
        if sys.argv[1] == "--pass":
            print(certificate % (git_hash, git_branch))
        elif sys.argv[1] == "--fail":
            print(certificate_bad % (git_hash, git_branch))
